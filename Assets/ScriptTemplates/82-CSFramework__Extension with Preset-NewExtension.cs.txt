using UnityEngine;
using CSFramework.Core;
using CSFramework.Extensions;
using CSFramework.Presets;

namespace CSFramework.Extensions
{
    // TODO replace TExtended by the type this extension extends
    [RequireComponent(typeof(TExtended))]
    public class #SCRIPTNAME# : Extension<TExtended, #SCRIPTNAME#Preset>
    {
        // TODO give a more meaningful name to _extended
        private TExtended _extended;
        #NOTRIM#
        private void Awake()
        {
            // TODO replace this with the actual way to fetch your component, it may or may not be `GetComponent`
            _extended = GetComponent<TExtended>();
        }
        #NOTRIM#
        public override PresettableCategory GetCategory() => ; // TODO Insert PresettableCategory here
        #NOTRIM#
        // You can access the Preset fields calling Preset.{fieldName}
    }
}

namespace CSFramework.Presets
{
    [CreateAssetMenu(menuName = "CSFramework/Preset Instances/#SCRIPTNAME#Preset", fileName = "new #SCRIPTNAME#Preset")]
    public class #SCRIPTNAME#Preset: Preset<#SCRIPTNAME#>
    {
        // TODO remove this field and create your own fields following the exact same format
        [field: SerializeField]
        public int Field { get; private set; }
    	#NOTRIM#
    }
}